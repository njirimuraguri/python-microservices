version: '3.8'

services:
  postgres:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_SERVER: ${POSTGRES_SERVER}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "15672:15672" # RabbitMQ Management Dashboard
      - "5672:5672"   # RabbitMQ Messaging Port

  django-admin:
    build:
      context: ./src/admin
      dockerfile: Dockerfile  # Make sure Dockerfile exists in ./src/admin
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
    environment:
      DJANGO_SERVER: ${POSTGRES_SERVER}
      DJANGO_DB_NAME: ${POSTGRES_DB}
      DJANGO_DB_USER: ${POSTGRES_USER}
      DJANGO_DB_PASSWORD: ${POSTGRES_PASSWORD}
    command: python manage.py runserver 0.0.0.0:8000  # Add command to start Django
    volumes:
      - ./src/admin:/app  # Adjust volumes as needed
    ports:
      - "8000:8000"

  fastapi-main:
    build:
      context: ./src/main
      dockerfile: Dockerfile  # Make sure Dockerfile exists in ./src/main
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
    environment:
      FASTAPI_SERVER: ${POSTGRES_SERVER}
      FASTAPI_DB_NAME: ${POSTGRES_DB}
      FASTAPI_DB_USER: ${POSTGRES_USER}
      FASTAPI_DB_PASSWORD: ${POSTGRES_PASSWORD}
    command: uvicorn main.main:app --host 0.0.0.0 --port 8001 --reload  # Add command to start FastAPI
    volumes:
      - ./src/main:/app  # Adjust volumes as needed
    ports:
      - "8001:8001"

volumes:
  postgres_data:
