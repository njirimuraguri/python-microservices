version: '3.8'

services:
  postgres:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - "15672:15672" # RabbitMQ Management Dashboard
      - "5672:5672"   # RabbitMQ Messaging Port

  django-admin:
    build:
      context: .
      dockerfile: src/admin/Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./pyhon-microservices:/src/amin/app
    ports:
      - "8000:8000"

  fastapi-main:
    build:
      context: .
      dockerfile: src/main/Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
      - rabbitmq
    command: bash -c 'while !</dev/tcp/postgres/5432; do sleep 1; done; uvicorn src.main.main:app --reload --host 0.0.0.0 --port 8001'
    volumes:
      - ./pyhon-microservices:/src/main/app
    ports:
      - "8001:8001"

volumes:
  postgres_data:
